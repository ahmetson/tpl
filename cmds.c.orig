/*
All Command information
*/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "tpl.h"
#include "cmds.h"
#include "token/token_types.h"
#include "cmd/assign.h"
#include "cmd/def_var.h"
#include "cmd/fn_call.h"
#include "cmd/arif.h"
#include "dev_debug.h"
#include "error.h"
#include "main/inf.h"

// Komandanyň birliginiň nomeri
const int UNKNOWN_ITEM  = 0;
const int TOKEN_ITEM    = 1;
const int CMD_ITEM      = 2;
const int PAREN_ITEM    = 3;

// Command can contain maximum 3 tokens
const int DEF_VAR_MAX_TOKENS = 3;
const int ASSIGN_MAX_ITEMS = 3;
const int FN_CALL_MAX_ITEMS = 2;
const int CMD_CLASS_ARIF_MAX_ITEMS = 3;

// Komandalaryn sanawy
int CMD_CLASS_UNKNOWN = 0;
int CMD_CLASS_DEF_VAR = 1;
int CMD_CLASS_ASSIGN  = 2;
int CMD_CLASS_FN      = 3;
int CMD_CLASS_ARIF    = 4;

#define CONST_GLOB 0
int GLOB = 0;
#define CONST_LOCAL 1
int LOCAL = 1;

is_cmd_item cmd_types[] = {
	   {is_cmd_def_var},
	   {is_cmd_assign},
	   {is_cmd_fn_call},
	   {is_cmd_arif}
};

// Dine debug uchin ulanylyar. Komanda tiplerinin atlary
char *cmd_classes[] = {
	"var",
	"assign",
	"function",
	"arifmetik"
};

char *cmd_class_types[][MAX_CLASS_TYPES] = {
	{"def", 0, 0, 0},			// Var class
	{"left", "right", 0, 0},
	{"call", 0, 0, 0},
	{"goşmak", "aýyrmak", "köpeltmek", "bölmek"}
};


int (*CMD_RETURN_TYPE[CMDS_TYPES_NUM+1][MAX_CLASS_TYPES])(command *cmd, int *cmd_class, int *cmd_type) = {
    {empty_cmd_return_type, empty_cmd_return_type, empty_cmd_return_type, empty_cmd_return_type},
    {cmd_def_var_return_type, empty_cmd_return_type, empty_cmd_return_type, empty_cmd_return_type}, //CMD_CLASS_DEF_VAR = 1;
    {empty_cmd_return_type, empty_cmd_return_type, empty_cmd_return_type, empty_cmd_return_type},   //CMD_CLASS_ASSIGN = 2;
    {cmd_fn_call_return_type, empty_cmd_return_type, empty_cmd_return_type, empty_cmd_return_type}, //CMD_CLASS_FNS = 3;
    {cmd_arif_return_type, cmd_arif_return_type, cmd_arif_return_type, cmd_arif_return_type}        //CMD_CLASS_FNS = 3;
};


// Komandanyň klasy we tipi boýunça semantikasyny barlaýan funksiýalar
int (*CMD_CHECK_SEMANTICS[CMDS_TYPES_NUM+1][MAX_CLASS_TYPES])(command *cmd) = {
    {empty_cmd_checking_semantic, empty_cmd_checking_semantic, empty_cmd_checking_semantic, empty_cmd_checking_semantic},
    {empty_cmd_checking_semantic, empty_cmd_checking_semantic, empty_cmd_checking_semantic, empty_cmd_checking_semantic},//CMD_CLASS_DEF_VAR = 1;
    {semantic_cmd_assign,         empty_cmd_checking_semantic, empty_cmd_checking_semantic, empty_cmd_checking_semantic},//CMD_CLASS_ASSIGN = 2;
    {semantic_cmd_fn_call,        empty_cmd_checking_semantic, empty_cmd_checking_semantic, empty_cmd_checking_semantic},//CMD_CLASS_FNS    = 3;
    {semantic_cmd_arif,           empty_cmd_checking_semantic, empty_cmd_checking_semantic, empty_cmd_checking_semantic} //CMD_CLASS_ARIF   = 4;
};


// Komandalaryň klasy we tipi boýunça, komandanyň tekstini ýazýan funksiýa çagyrylýar.
void (*CMD_GET_C_CODE[CMDS_TYPES_NUM+1][MAX_CLASS_TYPES])(command *cmd, char **l, int *len) = {
    {empty_cmd_c_code,    empty_cmd_c_code, empty_cmd_c_code,    empty_cmd_c_code},
    {empty_cmd_c_code,    empty_cmd_c_code, empty_cmd_c_code,    empty_cmd_c_code}, //CMD_CLASS_DEF_VAR = 1;
    {cmd_assign_c_code,   cmd_assign_c_code,empty_cmd_c_code,    empty_cmd_c_code}, //CMD_CLASS_ASSIGN = 2;
    {cmd_fn_call_c_code,  empty_cmd_c_code, empty_cmd_c_code,    empty_cmd_c_code}, //CMD_CLASS_FNS    = 3;
    {cmd_arif_c_code,     cmd_arif_c_code,  cmd_arif_c_code,     cmd_arif_c_code}  //CMD_CLASS_ARIF   = 4;
};


void init_cmd(command *cmd, char free_items)
{
	if (free_items && cmd->items_num)
	{
	    free(cmd->items);
	    cmd->items = 0;			// Kop free() funksiyany chagyrmakdan gorayar
	}
	cmd->items_num =
	cmd->is_compl =
	cmd->cmd_type =
	cmd->cmd_class =
	cmd->value_class =
	cmd->value_type =
	cmd->parenthesis = 0;
	cmd->ns = -1;

}


int recognize_cmd(command *cmd)
{
	// Komandany saygaryp bolmady ya ol gutarylmadyk
	if ((cmd->cmd_class<1 && cmd->cmd_type<1) || !cmd->is_compl)
	{
		//debug_cmd(cmd);
		return 0;
    }
	// Komandany saygaryp boldy
	return 1;
}

/**
 * Tokeni saygarylyar
**/
int parse_cmd(command *cmd)
{

	int i;
	for (i=0; i<CMDS_TYPES_NUM; i++)
	{
	    cmd->items[0];
	    cmd->items[0];
		if (cmd_types[i].is_cmd(cmd))
            return 1;
	}
	return 0;
}


/** Tokeni komanda salyar
 *
 * 0 - yalnyshlyk bar
 * 1 - hemme zat showly boldy
**/
int add_to_cmd(command *cmd, int type, token tok, parenthesis paren, command subcmd)
{
	// Komanda-da gaty kan tokenler bar
	if (cmd->items_num==CMD_MAX_ITEMS)
		return 0;

	cmd->items_num++;
    cmd->items[cmd->items_num-1] = get_cmd_item(type, paren, subcmd, tok);

    //printf("Kuchada yer berildi (tokenlerin sany:%d gowrumi:%d)\n", cmd->items_num, size);
    return 1;
}

// Komandalar bilen ishleyan bolum
int work_with_cmd()
{

	// Hazir TPL-in fayly komandalar bilen ishleyan boluminde
	int prev_part = CUR_PART;
	CUR_PART = 4;

    // TODO
    // KOMANDA gutarylmadyk bolsa, yalnyshlyk haty komanda gutarylmady diyip gaytaryar
	// Komanda saygarylyp showly gutardy
	if (!recognize_cmd(&cmd))
	{
	    //debug_cmd(&cmd);
        printf("SALAM 2");
		print_err(CODE4_CANT_IDENT_CMD, (token *)inf_get_last_token(&cmd));
	}

	if (!add_to_def_var_list(&cmd)) // Komanda ulnini yglan etme dal eken
    {
		// Komandany algoritme goshulyar
		algor_add_cmd(cmd);
	}

	CUR_PART = prev_part;
	return 1;

}


int empty_cmd_return_type(command *cmd, int *cmd_class, int *cmd_type)
{
    *cmd_class = TOK_CLASS_UNDEFINED;
    return 0;
}

int empty_cmd_checking_semantic(command *cmd)
{
    return 0;
}


/** Nätanyş ulanylan komandalara goşulýar

    \cmd - nätanyş komanda
    \cmdClass - gabat gelen komandanyň klasy
    \cmdType - gabat gelen komandanyň tipi
    \arg - komanda-da, şu tokeniň deregine garaşylan maglumat tipi
**/
void unknown_cmd_add(command *cmd, int cmd_class, int cmd_type, int waited_class, int waited_type)
{
    unknown_cmd unk;
    unk.cmd = cmd;
    unk.cmd_class = cmd_class;
    unk.cmd_type = cmd_class;
    unk.waited_class = waited_class;
    unk.waited_type = waited_type;

    ++UNKNOWN_CMDS_NUM;

    long size;
    size = sizeof(unk)*UNKNOWN_CMDS_NUM;
    UNKNOWN_CMDS = realloc(UNKNOWN_CMDS, size);

    UNKNOWN_CMDS[UNKNOWN_CMDS_NUM-1] = unk;
}



void empty_cmd_c_code(command *cmd, char **l, int *len)
{
    return;
}


/** Komandanyň içine birlik goşýar
**/
int cmd_add_item(command *cmd, int item_type, parenthesis p, command c, token t)
{
    int last = -1;
    command_item *last_e = NULL;

    if (cmd->items_num)
    {
        last = cmd->items_num-1;
        last_e = &cmd->items[last];
    }

    /** 1) Eger komandanyň öňki birligi gutarylmadyk bolsa, onda
            a) Eger öňki birlik token bolsa
                I) Komanda ýasap, öňki we häzirki birlik içine salynýar.
                II) Eger täze komanda ýasalmasa, onda
                    1) Öňki token nädogry diýen ýalňyşlyk görkezilýär.
            b) Eger öňki birlik komanda bolsa
                I) Komandanyň birlikleriniň içine goşmaly birlik salynýar.
                II) Eger birlik goşulansoň, komanda tanalmasa
                    2) "Öňki birlik nädogry" diýen ýalňyşlyk görkezilýär.
        Ýogsa
            c) Eger komanda birlik goşulsa we komanda tanalmasa, onda
                I) Eger komanda, goşulmadyk birliksiz özbaşdak manyny aňladýan we gutarylan bolsa
                    1) Täze komanda ýasalýar.
                    2) Öňki komanda, täze komandanyň birligi diýilip salynýar.
                    3) Goşulmaly birlik, komandanyň ikinji birligi diýilýär.
                    4) Eger täze komanda tanalmasa, onda
                        a) Eger öňki komanda-da birlik bar bolsa
                            I) täze komanda ýasalýar.
                            II) Öňki komanda-daky birlikm täze komandanyň birligi diýilip geçirilýär.
                            III) Goşmaly birlik täze komandanyň ikinji birligine öwrülýär.
                            IÝ) Eger täze komanda tanalmasa
                                1) "Komandany tanap bolmady" diýen ýalňyşlyk görkezilýär.
                               Ýogsa
                                2) Täze komanda öňki komandanyň soňky birliginiň deregine goýulýar.
                                3) Eger öňki komanda täze komanda goşulan soň tanalmasa
                                    a) "Komandany tanap bolmady" diýen ýalňyşlyk görkezilýär.
                Ýogsa, eger komanda, goşulmadyk birliksiz özbaşdak many aňladýan, emma gutarYLMADYK bolsa
                    5) Täze komanda ýasalýar.
                    6) Täze komandanyň birinji birligi diýilip goşulmaly birlik goýulýar.
                    7) Eger täze komanda tanalmasa
                        a) "Komandany tanap bolmady" diýen ýalňyşlyk görkezilýär.
                    8) Täze komanda, öňki komanda goşulýar.
                    9) Eger täze komanda goşulan soň, öňki komanda tanalmasa
                        a) "Komandany tanap bolmady" diýen ýalňyşlyk görkezilýär.
    */


	if (item_type==TOKEN_ITEM && t.is_compl==0 ||
        item_type==CMD_ITEM && c.is_compl==0)
    {
        CUR_PART = 2;
        print_err(CODE2_PREV_TOKEN_INCORRECT, &t);
    }


	// Komandanyň öňki birligi gutarylan bolmaly
	if (cmd->items_num!=0 &&
       ((last_e->type==TOKEN_ITEM && last_e->tok.is_compl==0) ||
        (last_e->type==CMD_ITEM   && last_e->cmd.is_compl==0)))
    {

        /// 1.a)
        if (last_e->type==TOKEN_ITEM)
        {
            // Ichki komandalaryn sanyny kopeltmeli
			//printf("Ichki komandalar uchin yer bar\n");
            /// 1.a.I)
            command new_subcmd = get_cmd();
            new_subcmd.items_num = 2;
            new_subcmd.items[0] = *last_e;
            new_subcmd.items[1] = get_cmd_item(item_type, p, c, t);

            // Ichki komanda uchin yere, birlikler gechirilyar.
            cmd->items[last] = get_cmd_item(CMD_ITEM, p, new_subcmd, t);

            /// 1.a.II)
            if (!parse_cmd(cmd))
            {
                /// 1.a.II.1)
                printf("SALAM 20");
                CUR_PART = 4;
                print_err(CODE4_CANT_IDENT_CMD, (token *)inf_get_last_token(cmd));
            }
        }
        /// 1.b)
        else if(last_e->type==CMD_ITEM)
        {
            last_e->cmd.items_num++;

            /// 1.b.I)
            last_e->cmd.items[last_e->cmd.items_num-1] = get_cmd_item(item_type, p, c, t);

            /// 1.b.II)
            if (!parse_cmd(&last_e->cmd))
            {
                 /// 1.b.II.a)
                printf("SALAM 21");
                CUR_PART = 4;
                print_err(CODE4_CANT_IDENT_CMD, (token *)inf_get_last_token(&last_e->cmd));
            }
            else if (!parse_cmd(cmd))
            {
                 /// 1.b.II.a)
                printf("SALAM 22");
                CUR_PART = 4;
                print_err(CODE4_CANT_IDENT_CMD, (token *)inf_get_last_token(cmd));
            }
        }
    }
    else
    {
        if (cmd->items_num!=0)
            printf("KOMANDA BAR EKENI");
        else
            printf("YOK HICH ZAT");
        printf("DEBUGLAMA\n");
        printf("DEBUGLAMA\n");
        //debug_cmd(cmd);
        //printf("Token komanda goshulmana tayynlandy\n");
        if (!add_to_cmd(cmd, item_type, t, p, c))
        {
            CUR_PART = 4;
            if (item_type==TOKEN_ITEM)
                print_err(CODE4_CANT_ADD_TOKEN, &t);
            else if(item_type==CMD_ITEM)
                print_err(CODE4_CANT_ADD_TOKEN, (token *)inf_get_last_token(&c));
            else if(item_type==PAREN_ITEM)
                print_err(CODE4_CANT_ADD_TOKEN, &inf_tok);
        }

        //printf("komanda barlanmana gechmeli\n");
        /// C)
        if (!parse_cmd(cmd))
        {
            cmd->items_num--;
            /// C.I
            if (cmd->items_num && parse_cmd(cmd) && cmd->is_compl)
            {
                // Eger ulni yglan etme bolsa, onda ichki komandany ulni yglan etmelerin ichine gechirmeli
                add_to_def_var_list(cmd);

                // Ichki komandalaryn sanyny kopeltmeli

                    //printf("Ichki komandalar uchin yer bar\n");

                    /// C.I.1)
                    command new_cmd = get_cmd();
                    new_cmd = *cmd;
                    int i=0;
                    for (i=0; i<cmd->items_num; ++i)
                    {
                        new_cmd.items[i] = cmd->items[i];
                    }

                    init_cmd(cmd, 0);
                    cmd->items_num = 2;

                    /// C.I.2)
                    // Komandanyň birinji birligi - Önki komanda goşulýar
                    cmd->items[0] = get_cmd_item(CMD_ITEM, p, new_cmd, t);

                    /// C.I.3)
                    // Komandanyň ikinji birligi   - Täze token goşulýar
                    cmd->items[1] = get_cmd_item(item_type, p, c, t);

                    /// C.I.4)
                        // Täze token öňki tokenlerden emele gelen komanda bilen täze komandany emele getirmedi
                    if (!parse_cmd(cmd))
                    {
                            /**
                            a) Eger öňki komanda-da birlik bar bolsa
                                I) täze komanda ýasalýar.
                                II) Öňki komandanyň soňky birligi, täze komandanyň birligi diýilip geçirilýär.
                                III) Goşmaly birlik täze komandanyň ikinji birligine öwrülýär.
                                IÝ) Eger täze komanda tanalmasa
                                    1) "Komandany tanap bolmady" diýen ýalňyşlyk görkezilýär.
                                   Ýogsa
                                    2) Täze komanda öňki komandanyň soňky birliginiň deregine goýulýar.
                                    3) Eger öňki komanda täze komanda goşulan soň tanalmasa
                                        a) "Komandany tanap bolmady" diýen ýalňyşlyk görkezilýär.
                              ýogsa
                               Ý) "Komandany tanap bolmady" diýen ýalňyşlyk görkezilýär.**/
                        *cmd = new_cmd;
                            /// C.I.4.a)

                        if (cmd->items_num)
                        {

                            /// C.I.4.a.I)
                            command n_c = get_cmd();
                            n_c.items_num = 2;

                            /// C.I.4.a.II)
                            n_c.items[0] = cmd->items[cmd->items_num-1];
printf("BEFORE:\n");
                            /// C.I.4.a.III)
                            n_c.items[1] = get_cmd_item(item_type, p, c, t);
printf(":AFTER\n");

                            if (!parse_cmd(&n_c))
                            {

                                printf("SALAM 30");
                                /// C.I.4.a.III.1)
                                CUR_PART = 4;
                                print_err(CODE4_CANT_IDENT_CMD, (token *)inf_get_last_token(&n_c));
                            }
                            else
                            {
                                /// C.I.4.a.III.2)
                                cmd->items[cmd->items_num-1] = get_cmd_item(CMD_ITEM, p, n_c, t);

                                    /// C.I.4.a.III.3)
                                if (!parse_cmd(cmd))
                                {
                                    /// C.I.4.a.III.4)
                                    CUR_PART = 4;
                                    print_err(CODE4_CANT_IDENT_CMD, (token *)inf_get_last_token(&n_c));
                                }
                            }
                        }
                        else
                        {
                            //debug_cmd(cmd);
                            //printf("Salam");
                            printf("SALAM 5");
                            CUR_PART = 4;
                            print_err(CODE4_CANT_IDENT_CMD, (token *)inf_get_last_token(cmd));
                        }
                    }
            }
            else
            {
                /// C.I.5)
                /*5) Täze komanda ýasalýar.
                    6) Täze komandanyň birinji birligi diýilip goşulmaly birlik goýulýar.
                    7) Eger täze komanda tanalmasa
                        a) "Komandany tanap bolmady" diýen ýalňyşlyk görkezilýär.
                    8) Täze komanda, öňki komanda goşulýar.
                    9) Eger täze komanda goşulan soň, öňki komanda tanalmasa
                        a) "Komandany tanap bolmady" diýen ýalňyşlyk görkezilýär.*/
                command new_subcmd = get_cmd();

                // Ichki komandalaryn sanyny kopeltmeli
                /// C.I.6)
                new_subcmd.items_num = 1;
                new_subcmd.items[0] = get_cmd_item(item_type, p, c, t);

                /// C.I.7)
                if (!parse_cmd(&new_subcmd))
                {
                    /// C.I.7.a)
                    printf("SALAM 7");
                    print_err(CODE4_CANT_IDENT_CMD, (token *)inf_get_last_token(&new_subcmd));
                }

                //cmd->items_num++;
                //printf("SALAM");
                // Eger ulni yglan etme bolsa, onda ichki komandany ulni yglan etmelerin ichine gechirmeli
                add_to_def_var_list(&new_subcmd);

                cmd->items_num++;

                //cmd_add_subcmd(cmd, new_cmd);

                /// C.I.8)
                cmd->items[cmd->items_num-1] = get_cmd_item(CMD_ITEM, p, new_subcmd, t);

                /// C.I.9)
                //printf("ONURTI\n");
                // Täze token öňki tokenlerden emele gelen komanda bilen täze komandany emele getirmedi
                if (!parse_cmd(cmd))
                {
                        //printf("SONUNDAN\n");
                    //debug_cmd(cmd);
                    //printf("Salam");
                    /// C.I.9.a)
                    printf("SALAM 9");
                    CUR_PART = 4;
                    print_err(CODE4_CANT_IDENT_CMD, (token *)inf_get_last_token(cmd));
                }
            //printf("SALAM 0");
            //debug_cmd(cmd);
            //print_err(CODE4_CANT_IDENT_CMD, (token *)inf_get_last_token(cmd));
            }
        }
    }

	return 1;
}


command get_empty_cmd()
{
    command c;
    init_cmd(&c, 0);
    return c;
}

command get_cmd()
{
    command c;
    init_cmd(&c, 0);
    c.items = create_subcmd_items_list(0);
    return c;
}

command_item get_cmd_item(int item_type, parenthesis p, command c, token t)
{
    command_item ci;
    if(item_type==TOKEN_ITEM)
        ci.tok = t;
    else if(item_type==CMD_ITEM)
        ci.cmd = c;
    else if(item_type==PAREN_ITEM)
        ci.paren = p;
    ci.type = item_type;
    return ci;
}
